class
 refid "org.hamcrest:BaseMatcher"
 instance QName(PackageNamespace("org.hamcrest"), "BaseMatcher")
  extends QName(PackageNamespace(""), "Object")
  implements Multiname("Matcher", [PackageNamespace("org.hamcrest")])
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("org.hamcrest:BaseMatcher")
  iinit
   name "org.hamcrest:BaseMatcher/BaseMatcher"
   refid "org.hamcrest:BaseMatcher/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait method QName(PackageNamespace(""), "describeMismatch")
   method
    name "org.hamcrest:BaseMatcher/describeMismatch"
    refid "org.hamcrest:BaseMatcher/instance/describeMismatch"
    param QName(PackageNamespace(""), "Object")
    param QName(PackageNamespace("org.hamcrest"), "Description")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "item"
    paramname "mismatchDescription"
    body
     maxstack 2
     localcount 3
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal2
      pushstring          "was "
      callproperty        QName(Namespace("org.hamcrest:Description"), "appendText"), 1
      getlocal1
      callpropvoid        QName(Namespace("org.hamcrest:Description"), "appendValue"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "matches")
   method
    name "org.hamcrest:BaseMatcher/matches"
    refid "org.hamcrest:BaseMatcher/instance/matches"
    param QName(PackageNamespace(""), "Object")
    returns QName(PackageNamespace(""), "Boolean")
    flag HAS_PARAM_NAMES
    paramname "item"
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("flash.errors"), "IllegalOperationError")
      pushstring          "BaseMatcher#matches must be override by subclass"
      constructprop       QName(PackageNamespace("flash.errors"), "IllegalOperationError"), 1
      throw
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "describeTo")
   method
    name "org.hamcrest:BaseMatcher/describeTo"
    refid "org.hamcrest:BaseMatcher/instance/describeTo"
    param QName(PackageNamespace("org.hamcrest"), "Description")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "description"
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("flash.errors"), "IllegalOperationError")
      pushstring          "BaseMatcher#describeTo must be override by subclass"
      constructprop       QName(PackageNamespace("flash.errors"), "IllegalOperationError"), 1
      throw
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "toString")
   method
    name "org.hamcrest:BaseMatcher/toString"
    refid "org.hamcrest:BaseMatcher/instance/toString"
    returns QName(PackageNamespace(""), "String")
    body
     maxstack 2
     localcount 1
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlex              QName(PackageNamespace("org.hamcrest"), "StringDescription")
      getlocal0
      callproperty        QName(PackageNamespace(""), "toString"), 1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  name ""
  refid "org.hamcrest:BaseMatcher/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
