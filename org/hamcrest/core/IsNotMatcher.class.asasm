class
 refid "org.hamcrest.core:IsNotMatcher"
 instance QName(PackageNamespace("org.hamcrest.core"), "IsNotMatcher")
  extends QName(PackageNamespace("org.hamcrest"), "BaseMatcher")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("org.hamcrest.core:IsNotMatcher")
  iinit
   name "org.hamcrest.core:IsNotMatcher/IsNotMatcher"
   refid "org.hamcrest.core:IsNotMatcher/instance/init"
   param QName(PackageNamespace("org.hamcrest"), "Matcher")
   flag HAS_PARAM_NAMES
   paramname "matcher"
   body
    maxstack 2
    localcount 2
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     findproperty        QName(PrivateNamespace("org.hamcrest.core:IsNotMatcher"), "_matcher")
     getlocal1
     initproperty        QName(PrivateNamespace("org.hamcrest.core:IsNotMatcher"), "_matcher")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("org.hamcrest.core:IsNotMatcher"), "_matcher") type QName(PackageNamespace("org.hamcrest"), "Matcher") end
  trait method QName(PackageNamespace(""), "matches") flag OVERRIDE
   method
    name "org.hamcrest.core:IsNotMatcher/matches"
    refid "org.hamcrest.core:IsNotMatcher/instance/matches"
    param QName(PackageNamespace(""), "Object")
    returns QName(PackageNamespace(""), "Boolean")
    flag HAS_PARAM_NAMES
    paramname "item"
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlex              QName(PrivateNamespace("org.hamcrest.core:IsNotMatcher"), "_matcher")
      getlocal1
      callproperty        QName(Namespace("org.hamcrest:Matcher"), "matches"), 1
      not
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "describeTo") flag OVERRIDE
   method
    name "org.hamcrest.core:IsNotMatcher/describeTo"
    refid "org.hamcrest.core:IsNotMatcher/instance/describeTo"
    param QName(PackageNamespace("org.hamcrest"), "Description")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "description"
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal1
      pushstring          "not "
      callproperty        QName(Namespace("org.hamcrest:Description"), "appendText"), 1
      getlex              QName(PrivateNamespace("org.hamcrest.core:IsNotMatcher"), "_matcher")
      callpropvoid        QName(Namespace("org.hamcrest:Description"), "appendDescriptionOf"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  name ""
  refid "org.hamcrest.core:IsNotMatcher/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
