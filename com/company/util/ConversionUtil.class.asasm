class
 refid "com.company.util:ConversionUtil"
 instance QName(PackageNamespace("com.company.util"), "ConversionUtil")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  iinit
   name "ConversionUtil"
   refid "com.company.util:ConversionUtil/instance/init"
   param QName(PrivateNamespace("FilePrivateNS:ConversionUtil"), "StaticEnforcer")
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   body
    maxstack 1
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "com.company.util:ConversionUtil/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
 trait method QName(PackageNamespace(""), "toIntArray")
  method
   name "toIntArray"
   refid "com.company.util:ConversionUtil/class/toIntArray"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "Array")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 2
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L7

     newarray            0
     returnvalue

L7:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseInt")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toNumberArray")
  method
   name "toNumberArray"
   refid "com.company.util:ConversionUtil/class/toNumberArray"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "Array")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 2
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L7

     newarray            0
     returnvalue

L7:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toIntVector")
  method
   name "toIntVector"
   refid "com.company.util:ConversionUtil/class/toIntVector"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>)
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 4
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L10

     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "int")
     applytype           1
     construct           0
     returnvalue

L10:
     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "int")
     applytype           1
     getlocal0
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseInt")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     call                1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toNumberVector")
  method
   name "toNumberVector"
   refid "com.company.util:ConversionUtil/class/toNumberVector"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "Number")>)
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 4
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L10

     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "Number")
     applytype           1
     construct           0
     returnvalue

L10:
     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "Number")
     applytype           1
     getlocal0
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     call                1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toStringArray")
  method
   name "toStringArray"
   refid "com.company.util:ConversionUtil/class/toStringArray"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "Array")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 2
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L7

     newarray            0
     returnvalue

L7:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toRectangle")
  method
   name "toRectangle"
   refid "com.company.util:ConversionUtil/class/toRectangle"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace("flash.geom"), "Rectangle")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 6
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L8

     findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
     constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 0
     returnvalue

L8:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal3

     getlocal3
     pushnull
     equals
     dup
     iftrue              L26

     pop
     getlocal3
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            4
     lessthan
L26:
     iffalse             L30

     findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
     constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 0
     jump                L45

L30:
     findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
     getlocal3
     pushbyte            0
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            3
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
     coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
L45:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toPoint")
  method
   name "toPoint"
   refid "com.company.util:ConversionUtil/class/toPoint"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace("flash.geom"), "Point")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 4
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L8

     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     returnvalue

L8:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlocal0
     getproperty         QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal3

     getlocal3
     pushnull
     equals
     dup
     iftrue              L27

     pop
     getlocal3
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            2
     lessthan
L27:
     iffalse             L31

     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     jump                L40

L31:
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     getlocal3
     pushbyte            0
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 2
     coerce              QName(PackageNamespace("flash.geom"), "Point")
L40:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toPointPair")
  method
   name "toPointPair"
   refid "com.company.util:ConversionUtil/class/toPointPair"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "Array")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 5
    localcount 5
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     newarray            0
     coerce              QName(PackageNamespace(""), "Array")
     setlocal3

     getlocal1
     pushnull
     ifne                L18

     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     returnvalue

L18:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlocal0
     getproperty         QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     dup
     setlocal            4

     pushnull
     equals
     dup
     iftrue              L37

     pop
     getlocal            4
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            4
     lessthan
L37:
     iffalse             L48

     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 0
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     returnvalue

L48:
     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     getlocal            4
     pushbyte            0
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal            4
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 2
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     getlocal            4
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal            4
     pushbyte            3
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 2
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

     getlocal3
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toVector3D")
  method
   name "toVector3D"
   refid "com.company.util:ConversionUtil/class/toVector3D"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace("flash.geom"), "Vector3D")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 5
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L8

     findpropstrict      QName(PackageNamespace("flash.geom"), "Vector3D")
     constructprop       QName(PackageNamespace("flash.geom"), "Vector3D"), 0
     returnvalue

L8:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlocal0
     getproperty         QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal3

     getlocal3
     pushnull
     equals
     dup
     iftrue              L27

     pop
     getlocal3
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            3
     lessthan
L27:
     iffalse             L31

     findpropstrict      QName(PackageNamespace("flash.geom"), "Vector3D")
     constructprop       QName(PackageNamespace("flash.geom"), "Vector3D"), 0
     jump                L43

L31:
     findpropstrict      QName(PackageNamespace("flash.geom"), "Vector3D")
     getlocal3
     pushbyte            0
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     getlocal3
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     constructprop       QName(PackageNamespace("flash.geom"), "Vector3D"), 3
     coerce              QName(PackageNamespace("flash.geom"), "Vector3D")
L43:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "toCharCodesVector")
  method
   name "toCharCodesVector"
   refid "com.company.util:ConversionUtil/class/toCharCodesVector"
   param QName(PackageNamespace(""), "Object")
   param QName(PackageNamespace(""), "String")
   returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>)
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   body
    maxstack 4
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     ifne                L10

     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "int")
     applytype           1
     construct           0
     returnvalue

L10:
     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "int")
     applytype           1
     getlocal0
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal2
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseCharCode")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     call                1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "addToNumberVector")
  method
   name "addToNumberVector"
   refid "com.company.util:ConversionUtil/class/addToNumberVector"
   param QName(PackageNamespace(""), "Object")
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "Number")>)
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   paramname "_arg3"
   body
    maxstack 2
    localcount 8
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushnan
     setlocal            5

     getlocal1
     pushnull
     ifne                L8

     returnvoid

L8:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal3
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal            4

     pushbyte            0
     setlocal            7

     getlocal            4
     setlocal            6

     jump                L30

L21:
     label
     getlocal            6
     getlocal            7
     nextvalue
     convert_d
     setlocal            5

     getlocal2
     getlocal            5
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L30:
     hasnext2            6, 7
     iftrue              L21

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "addToIntVector")
  method
   name "addToIntVector"
   refid "com.company.util:ConversionUtil/class/addToIntVector"
   param QName(PackageNamespace(""), "Object")
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>)
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Utf8(",")
   paramname "_arg1"
   paramname "_arg2"
   paramname "_arg3"
   body
    maxstack 2
    localcount 8
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal            5

     getlocal1
     pushnull
     ifne                L8

     returnvoid

L8:
     getlocal1
     callproperty        Multiname("toString", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 0
     getlocal3
     callproperty        Multiname("split", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     getlex              QName(PackageNamespace(""), "mapParseFloat")
     callproperty        Multiname("map", [PrivateNamespace("com.company.util:ConversionUtil"), StaticProtectedNs("com.company.util:ConversionUtil"), StaticProtectedNs("Object"), PackageNamespace("com.company.util"), PackageInternalNs("com.company.util"), PrivateNamespace("FilePrivateNS:ConversionUtil"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")]), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal            4

     pushbyte            0
     setlocal            7

     getlocal            4
     setlocal            6

     jump                L30

L21:
     label
     getlocal            6
     getlocal            7
     nextvalue
     convert_i
     setlocal            5

     getlocal2
     getlocal            5
     callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L30:
     hasnext2            6, 7
     iftrue              L21

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "mapParseFloat")
  method
   name "mapParseFloat"
   refid "com.company.util:ConversionUtil/class/mapParseFloat"
   param null
   returns QName(PackageNamespace(""), "Number")
   flag NEED_REST
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   body
    maxstack 3
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace(""), "parseFloat")
     getglobalscope
     getlocal1
     call                1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "mapParseInt")
  method
   name "mapParseInt"
   refid "com.company.util:ConversionUtil/class/mapParseInt"
   param null
   returns QName(PackageNamespace(""), "Number")
   flag NEED_REST
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   body
    maxstack 3
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace(""), "parseInt")
     getglobalscope
     getlocal1
     call                1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "mapParseCharCode")
  method
   name "mapParseCharCode"
   refid "com.company.util:ConversionUtil/class/mapParseCharCode"
   param null
   returns QName(PackageNamespace(""), "Number")
   flag NEED_REST
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   body
    maxstack 1
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     convert_s
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "charCodeAt"), 0
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "vector3DToShaderParameter")
  method
   name "vector3DToShaderParameter"
   refid "com.company.util:ConversionUtil/class/vector3DToShaderParameter"
   param QName(PackageNamespace("flash.geom"), "Vector3D")
   returns QName(PackageNamespace(""), "Array")
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   body
    maxstack 3
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     getproperty         QName(PackageNamespace(""), "x")
     getlocal1
     getproperty         QName(PackageNamespace(""), "y")
     getlocal1
     getproperty         QName(PackageNamespace(""), "z")
     newarray            3
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
