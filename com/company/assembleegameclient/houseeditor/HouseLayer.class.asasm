class
 refid "com.company.assembleegameclient.houseeditor:HouseLayer"
 instance QName(PackageNamespace("com.company.assembleegameclient.houseeditor"), "HouseLayer")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  iinit
   refid "com.company.assembleegameclient.houseeditor:HouseLayer/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "com.company.assembleegameclient.houseeditor:HouseLayer/class/init"
  body
   maxstack 4
   localcount 1
   initscopedepth 0
   maxscopedepth 1
   code
    getlocal0
    pushscope

    getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
    getlex              QName(PackageNamespace(""), "int")
    applytype           1
    pushbyte            2
    construct           1
    dup
    pushbyte            0
    pushbyte            -1
    setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.houseeditor:HouseLayer"), StaticProtectedNs("com.company.assembleegameclient.houseeditor:HouseLayer"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.houseeditor"), PackageInternalNs("com.company.assembleegameclient.houseeditor"), PrivateNamespace("FilePrivateNS:HouseLayer"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

    dup
    pushbyte            1
    pushbyte            -1
    setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.houseeditor:HouseLayer"), StaticProtectedNs("com.company.assembleegameclient.houseeditor:HouseLayer"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.houseeditor"), PackageInternalNs("com.company.assembleegameclient.houseeditor"), PrivateNamespace("FilePrivateNS:HouseLayer"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

    findproperty        QName(PackageNamespace(""), "EMPTY_TILE")
    swap
    initproperty        QName(PackageNamespace(""), "EMPTY_TILE")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "GROUND") type QName(PackageNamespace(""), "int") value Integer(0) end
 trait const QName(PackageNamespace(""), "OBJECT") type QName(PackageNamespace(""), "int") value Integer(1) end
 trait const QName(PackageNamespace(""), "NUM_LAYERS") type QName(PackageNamespace(""), "int") value Integer(2) end
 trait const QName(PackageNamespace(""), "EMPTY_TILE") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>) end
end ; class
