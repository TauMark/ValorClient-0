class
 refid "com.company.assembleegameclient.objects.particles:FlowEffect"
 instance QName(PackageNamespace("com.company.assembleegameclient.objects.particles"), "FlowEffect")
  extends QName(PackageNamespace("com.company.assembleegameclient.objects.particles"), "ParticleEffect")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("com.company.assembleegameclient.objects.particles:FlowEffect")
  iinit
   name "FlowEffect"
   refid "com.company.assembleegameclient.objects.particles:FlowEffect/instance/init"
   param QName(PackageNamespace("kabam.rotmg.messaging.impl.data"), "WorldPosData")
   param QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject")
   param QName(PackageNamespace(""), "int")
   flag HAS_PARAM_NAMES
   paramname "_arg1"
   paramname "_arg2"
   paramname "_arg3"
   body
    maxstack 4
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     getlocal0
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     getlocal1
     getproperty         QName(PackageNamespace(""), "x_")
     getlocal1
     getproperty         QName(PackageNamespace(""), "y_")
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 2
     setproperty         QName(PackageNamespace(""), "start_")

     getlocal0
     getlocal2
     setproperty         QName(PackageNamespace(""), "go_")

     getlocal0
     getlocal3
     setproperty         QName(PackageNamespace(""), "color_")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace(""), "start_") type QName(PackageNamespace("flash.geom"), "Point") end
  trait slot QName(PackageNamespace(""), "go_") type QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject") end
  trait slot QName(PackageNamespace(""), "color_") type QName(PackageNamespace(""), "int") end
  trait method QName(PackageNamespace(""), "runNormalRendering") flag OVERRIDE
   method
    name "runNormalRendering"
    refid "com.company.assembleegameclient.objects.particles:FlowEffect/instance/runNormalRendering"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "Boolean")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 6
     localcount 7
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal            6

      pushnull
      setlocal            4

      pushbyte            0
      setlocal            5

      getlex              QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle")
      getproperty         QName(PackageNamespace(""), "total_")
      pushshort           200
      ifngt               L14

      pushfalse
      returnvalue

L14:
      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getproperty         QName(PackageNamespace(""), "x")
      findproperty        QName(PackageNamespace(""), "x_")
      swap
      setproperty         QName(PackageNamespace(""), "x_")

      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getproperty         QName(PackageNamespace(""), "y")
      findproperty        QName(PackageNamespace(""), "y_")
      swap
      setproperty         QName(PackageNamespace(""), "y_")

      pushbyte            5
      setlocal3

      jump                L59

L29:
      label
      pushbyte            3
      getlex              QName(PackageNamespace(""), "Math")
      callproperty        QName(PackageNamespace(""), "random"), 0
      pushbyte            5
      multiply
      convert_i
      add
      pushbyte            20
      multiply
      convert_i
      setlocal            6

      findpropstrict      QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle")
      pushdouble          0.5
      getlocal            6
      getlocal0
      getproperty         QName(PackageNamespace(""), "color_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "go_")
      constructprop       QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle"), 5
      coerce              QName(PackageNamespace("com.company.assembleegameclient.objects.particles"), "Particle")
      setlocal            4

      getlex              QName(PackageNamespace(""), "map_")
      getlocal            4
      getlex              QName(PackageNamespace(""), "x_")
      getlex              QName(PackageNamespace(""), "y_")
      callpropvoid        QName(PackageNamespace(""), "addObj"), 3

      inclocal_i          5
L59:
      getlocal            5
      getlocal3
      iflt                L29

      pushfalse
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "runEasyRendering") flag OVERRIDE
   method
    name "runEasyRendering"
    refid "com.company.assembleegameclient.objects.particles:FlowEffect/instance/runEasyRendering"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "Boolean")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 6
     localcount 7
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal            6

      pushnull
      setlocal            4

      pushbyte            0
      setlocal            5

      getlex              QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle")
      getproperty         QName(PackageNamespace(""), "total_")
      pushshort           200
      ifngt               L14

      pushfalse
      returnvalue

L14:
      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getproperty         QName(PackageNamespace(""), "x")
      findproperty        QName(PackageNamespace(""), "x_")
      swap
      setproperty         QName(PackageNamespace(""), "x_")

      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getproperty         QName(PackageNamespace(""), "y")
      findproperty        QName(PackageNamespace(""), "y_")
      swap
      setproperty         QName(PackageNamespace(""), "y_")

      pushbyte            3
      setlocal3

      jump                L59

L29:
      label
      pushbyte            3
      getlex              QName(PackageNamespace(""), "Math")
      callproperty        QName(PackageNamespace(""), "random"), 0
      pushbyte            5
      multiply
      convert_i
      add
      pushbyte            10
      multiply
      convert_i
      setlocal            6

      findpropstrict      QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle")
      pushdouble          0.5
      getlocal            6
      getlocal0
      getproperty         QName(PackageNamespace(""), "color_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "start_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "go_")
      constructprop       QName(PrivateNamespace("FilePrivateNS:FlowEffect"), "FlowParticle"), 5
      coerce              QName(PackageNamespace("com.company.assembleegameclient.objects.particles"), "Particle")
      setlocal            4

      getlex              QName(PackageNamespace(""), "map_")
      getlocal            4
      getlex              QName(PackageNamespace(""), "x_")
      getlex              QName(PackageNamespace(""), "y_")
      callpropvoid        QName(PackageNamespace(""), "addObj"), 3

      inclocal_i          5
L59:
      getlocal            5
      getlocal3
      iflt                L29

      pushfalse
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "com.company.assembleegameclient.objects.particles:FlowEffect/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
