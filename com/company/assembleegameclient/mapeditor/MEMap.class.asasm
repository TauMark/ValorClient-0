class
 refid "com.company.assembleegameclient.mapeditor:MEMap"
 instance QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "MEMap")
  extends QName(PackageNamespace("flash.display"), "Sprite")
  flag SEALED
  iinit
   name "MEMap"
   refid "com.company.assembleegameclient.mapeditor:MEMap/instance/init"
   body
    maxstack 6
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     findpropstrict      QName(PackageNamespace("flash.utils"), "Dictionary")
     constructprop       QName(PackageNamespace("flash.utils"), "Dictionary"), 0
     setproperty         QName(PackageNamespace(""), "tileDict_")

     getlocal0
     findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     pushtrue
     pushbyte            0
     constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
     setproperty         QName(PackageNamespace(""), "fullMap_")

     getlocal0
     findpropstrict      QName(PackageNamespace(""), "BitmapDataSpy")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushtrue
     pushbyte            0
     constructprop       QName(PackageNamespace(""), "BitmapDataSpy"), 4
     setproperty         QName(PackageNamespace(""), "regionMap_")

     getlocal0
     findpropstrict      QName(PackageNamespace(""), "BitmapDataSpy")
     pushshort           512
     pushshort           512
     pushtrue
     pushbyte            0
     constructprop       QName(PackageNamespace(""), "BitmapDataSpy"), 4
     setproperty         QName(PackageNamespace(""), "map_")

     getlocal0
     findpropstrict      QName(PackageNamespace("flash.display"), "Shape")
     constructprop       QName(PackageNamespace("flash.display"), "Shape"), 0
     setproperty         QName(PackageNamespace(""), "overlay_")

     getlocal0
     findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     pushtrue
     pushbyte            0
     constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
     setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")

     getlocal0
     findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            16
     multiply
     pushtrue
     pushbyte            0
     constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
     setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")

     getlocal0
     constructsuper      0

     getlex              QName(PackageNamespace(""), "graphics")
     getlex              QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundBD_")
     pushnull
     pushtrue
     callpropvoid        QName(PackageNamespace(""), "beginBitmapFill"), 3

     getlex              QName(PackageNamespace(""), "graphics")
     pushbyte            0
     pushbyte            0
     pushshort           512
     pushshort           512
     callpropvoid        QName(PackageNamespace(""), "drawRect"), 4

     findpropstrict      QName(PackageNamespace(""), "addChild")
     findpropstrict      QName(PackageNamespace("flash.display"), "Bitmap")
     getlocal0
     getproperty         QName(PackageNamespace(""), "map_")
     constructprop       QName(PackageNamespace("flash.display"), "Bitmap"), 1
     callpropvoid        QName(PackageNamespace(""), "addChild"), 1

     findpropstrict      QName(PackageNamespace(""), "addChild")
     getlocal0
     getproperty         QName(PackageNamespace(""), "overlay_")
     callpropvoid        QName(PackageNamespace(""), "addChild"), 1

     getlocal0
     findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            2
     divide
     getlocal0
     callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeInTiles"), 0
     pushbyte            2
     divide
     subtract
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     pushbyte            2
     divide
     getlocal0
     callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeInTiles"), 0
     pushbyte            2
     divide
     subtract
     constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
     setproperty         QName(PackageNamespace(""), "posT_")

     getlocal0
     getlex              QName(PackageNamespace("com.company.util"), "AssetLibrary")
     pushstring          "invisible"
     pushbyte            0
     callproperty        QName(PackageNamespace(""), "getImageFromSet"), 2
     setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "invisibleTexture_")

     getlocal0
     getlex              QName(PackageNamespace("com.company.util"), "AssetLibrary")
     pushstring          "lofiObj3"
     pushshort           255
     callproperty        QName(PackageNamespace(""), "getImageFromSet"), 2
     setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "replaceTexture_")

     getlocal0
     callpropvoid        QName(PackageNamespace(""), "draw"), 0

     findpropstrict      QName(PackageNamespace(""), "addEventListener")
     pushstring          "addedToStage"
     getlocal0
     getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onAddedToStage")
     callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

     findpropstrict      QName(PackageNamespace(""), "addEventListener")
     pushstring          "removedFromStage"
     getlocal0
     getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onRemovedFromStage")
     callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace(""), "drawSize") type QName(PackageNamespace(""), "int") value Integer(1) end
  trait slot QName(PackageNamespace(""), "tileDict_") type QName(PackageNamespace("flash.utils"), "Dictionary") end
  trait slot QName(PackageNamespace(""), "fullMap_") type QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData") end
  trait slot QName(PackageNamespace(""), "regionMap_") type QName(PackageNamespace("flash.display"), "BitmapData") end
  trait slot QName(PackageNamespace(""), "map_") type QName(PackageNamespace("flash.display"), "BitmapData") end
  trait slot QName(PackageNamespace(""), "overlay_") type QName(PackageNamespace("flash.display"), "Shape") end
  trait slot QName(PackageNamespace(""), "anchorLock") type QName(PackageNamespace(""), "Boolean") value False() end
  trait slot QName(PackageNamespace(""), "posT_") type QName(PackageNamespace("com.company.util"), "IntPoint") end
  trait slot QName(PackageNamespace(""), "zoom_") type QName(PackageNamespace(""), "Number") value Integer(1) end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_") type QName(PackageNamespace("com.company.util"), "IntPoint") value Null() end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_") type QName(PackageNamespace("com.company.util"), "IntPoint") value Null() end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride") type QName(PackageNamespace(""), "int") value Integer(0) end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride") type QName(PackageNamespace(""), "int") value Integer(0) end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "invisibleTexture_") type QName(PackageNamespace("flash.display"), "BitmapData") end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "replaceTexture_") type QName(PackageNamespace("flash.display"), "BitmapData") end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_") type QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData") end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_") type QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData") end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowObjectLayer_") type QName(PackageNamespace(""), "Boolean") value True() end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowGroundLayer_") type QName(PackageNamespace(""), "Boolean") value True() end
  trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowRegionLayer_") type QName(PackageNamespace(""), "Boolean") value True() end
  trait setter QName(PackageNamespace(""), "ifShowObjectLayer")
   method
    name "ifShowObjectLayer"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/ifShowObjectLayer/setter"
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowObjectLayer_")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "ifShowGroundLayer")
   method
    name "ifShowGroundLayer"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/ifShowGroundLayer/setter"
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowGroundLayer_")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "ifShowRegionLayer")
   method
    name "ifShowRegionLayer"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/ifShowRegionLayer/setter"
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowRegionLayer_")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "resize")
   method
    name "resize"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/resize"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 6
     localcount 11
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal            7

      pushbyte            0
      setlocal            8

      pushbyte            0
      setlocal            5

      pushbyte            0
      setlocal            6

      pushnull
      setlocal            4

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      setlocal2

      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      setlocal3

      getlocal1
      findproperty        QName(PackageNamespace(""), "NUM_SQUARES")
      swap
      setproperty         QName(PackageNamespace(""), "NUM_SQUARES")

      getlocal0
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom"), 0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "setZoom"), 1

      getlocal0
      findpropstrict      QName(PackageNamespace("flash.utils"), "Dictionary")
      constructprop       QName(PackageNamespace("flash.utils"), "Dictionary"), 0
      setproperty         QName(PackageNamespace(""), "tileDict_")

      getlocal0
      findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      pushtrue
      pushbyte            0
      constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
      setproperty         QName(PackageNamespace(""), "fullMap_")

      getlocal0
      findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      pushtrue
      pushbyte            0
      constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")

      getlocal0
      findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData")
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushbyte            16
      multiply
      pushtrue
      pushbyte            0
      constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "BigBitmapData"), 4
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")

      getlocal0
      findpropstrict      QName(PackageNamespace(""), "BitmapDataSpy")
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      pushtrue
      pushbyte            0
      constructprop       QName(PackageNamespace(""), "BitmapDataSpy"), 4
      setproperty         QName(PackageNamespace(""), "regionMap_")

      pushbyte            0
      setlocal            10

      getlocal2
      setlocal            9

      jump                L124

L78:
      label
      getlocal            9
      getlocal            10
      nextname
      coerce_s
      setlocal            4

      getlocal2
      getlocal            4
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            7

      callproperty        QName(PackageNamespace(""), "isEmpty"), 0
      iffalse             L96

      pushnull
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal            7

      jump                L124

L96:
      getlocal            4
      convert_i
      dup
      setlocal            8

      getlocal3
      modulo
      convert_i
      setlocal            5

      getlocal            8
      getlocal3
      divide
      convert_i
      setlocal            6

      getlocal            5
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      lessthan
      dup
      iffalse             L118

      pop
      getlocal            6
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      lessthan
L118:
      iffalse             L124

      getlocal0
      getlocal            5
      getlocal            6
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "setTile"), 3

L124:
      hasnext2            9, 10
      iftrue              L78

      pushnull
      setlocal2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getType")
   method
    name "getType"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getType"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "int")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 3
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      getlocal2
      callproperty        QName(PackageNamespace(""), "getTile"), 2
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            4

      pushnull
      ifne                L13

      pushbyte            -1
      returnvalue

L13:
      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      getlocal3
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getTile")
   method
    name "getTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 4
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal1
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      multiply
      add
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "modifyTile")
   method
    name "modifyTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/modifyTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "x"
    paramname "y"
    paramname "layer"
    paramname "type"
    body
     maxstack 4
     localcount 8
     initscopedepth 0
     maxscopedepth 3
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      getlocal2
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "getOrCreateTile"), 2
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            5

      getproperty         QName(PackageNamespace(""), "types_")
      getlocal3
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      getlocal            4
      ifne                L15

      returnvoid

L15:
      getlocal            5
      getproperty         QName(PackageNamespace(""), "types_")
      getlocal3
      getlocal            4
      setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

L20:
      getlocal0
      getlocal1
      getlocal2
      getlocal            5
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawTile"), 3

L25:
      jump                L53

L26:
      getlocal0
      pushscope

      newcatch            0
      dup
      setlocal            7

      dup
      pushscope

      swap
      setslot             1

      findpropstrict      QName(PackageNamespace(""), "Error")
      pushstring          "Invalid type: 0x"
      getlocal            4
      pushbyte            16
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "toString"), 1
      add
      pushstring          " at location: "
      add
      getlocal1
      add
      pushstring          " x, "
      add
      getlocal2
      add
      pushstring          " y"
      add
      constructprop       QName(PackageNamespace(""), "Error"), 1
      throw

L53:
      returnvoid
     end ; code
     try from L20 to L25 target L26 type QName(PackageNamespace(""), "Error") name QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "error") end
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getObjectName")
   method
    name "getObjectName"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getObjectName"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "String")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 3
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      getlocal2
      callproperty        QName(PackageNamespace(""), "getTile"), 2
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal3

      getlocal3
      pushnull
      ifne                L13

      pushnull
      returnvalue

L13:
      getlocal3
      getproperty         QName(PackageNamespace(""), "objName_")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "modifyObjectName")
   method
    name "modifyObjectName"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/modifyObjectName"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 3
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      getlocal2
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "getOrCreateTile"), 2
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            4

      getlocal3
      setproperty         QName(PackageNamespace(""), "objName_")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getAllTiles")
   method
    name "getAllTiles"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getAllTiles"
    returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("com.company.util"), "IntPoint")>)
    body
     maxstack 5
     localcount 6
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal1

      pushbyte            0
      setlocal2

      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace("com.company.util"), "IntPoint")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("com.company.util"), "IntPoint")>)
      setlocal3

      pushbyte            0
      setlocal            5

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      setlocal            4

      jump                L37

L18:
      label
      getlocal            4
      getlocal            5
      nextname
      coerce_s
      setlocal1

      getlocal1
      convert_i
      setlocal2

      getlocal3
      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      modulo
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      divide
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L37:
      hasnext2            4, 5
      iftrue              L18

      getlocal3
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setTile")
   method
    name "setTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/setTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 4
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal3
      callproperty        QName(PackageNamespace(""), "clone"), 0
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal3

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal1
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      multiply
      add
      getlocal3
      setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

      getlocal0
      getlocal1
      getlocal2
      getlocal3
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawTile"), 3

      pushnull
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal3

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "eraseTile")
   method
    name "eraseTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/eraseTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 4
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      getlocal2
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "clearTile"), 2

      getlocal0
      getlocal1
      getlocal2
      pushnull
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawTile"), 3

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "toggleLayers")
   method
    name "toggleLayers"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/toggleLayers"
    param QName(PackageNamespace(""), "Array")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 1
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "clear")
   method
    name "clear"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/clear"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal2

      pushbyte            0
      setlocal1

      pushbyte            0
      setlocal            4

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      setlocal3

      jump                L29

L12:
      label
      getlocal3
      getlocal            4
      nextname
      coerce_s
      setlocal2

      getlocal2
      convert_i
      setlocal1

      getlocal0
      getlocal1
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      modulo
      getlocal1
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      divide
      callpropvoid        QName(PackageNamespace(""), "eraseTile"), 2

L29:
      hasnext2            3, 4
      iftrue              L12

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getTileBounds")
   method
    name "getTileBounds"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getTileBounds"
    returns QName(PackageNamespace("flash.geom"), "Rectangle")
    body
     maxstack 6
     localcount 12
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal            9

      pushnull
      setlocal            6

      pushbyte            0
      setlocal            7

      pushbyte            0
      setlocal            4

      pushbyte            0
      setlocal            5

      pushbyte            0
      setlocal2

      pushbyte            0
      setlocal            8

      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      convert_i
      setlocal3

      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      convert_i
      setlocal1

      pushbyte            0
      setlocal            11

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      setlocal            10

      jump                L86

L28:
      label
      getlocal            10
      getlocal            11
      nextname
      coerce_s
      setlocal            9

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal            9
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            6

      callproperty        QName(PackageNamespace(""), "isEmpty"), 0
      iftrue              L86

      getlocal            9
      convert_i
      dup
      setlocal            7

      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      modulo
      convert_i
      setlocal            4

      getlocal            7
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      divide
      convert_i
      setlocal            5

      getlocal            4
      getlocal3
      ifnlt               L61

      getlocal            4
      setlocal3

L61:
      getlocal            5
      getlocal1
      ifnlt               L66

      getlocal            5
      setlocal1

L66:
      getlocal            4
      pushbyte            1
      add
      getlocal2
      ifngt               L76

      getlocal            4
      pushbyte            1
      add
      convert_i
      setlocal2

L76:
      getlocal            5
      pushbyte            1
      add
      getlocal            8
      ifngt               L86

      getlocal            5
      pushbyte            1
      add
      convert_i
      setlocal            8

L86:
      hasnext2            10, 11
      iftrue              L28

      getlocal3
      getlocal2
      ifngt               L93

      pushnull
      returnvalue

L93:
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal3
      getlocal1
      getlocal2
      getlocal3
      subtract
      getlocal            8
      getlocal1
      subtract
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeInTiles")
   method
    name "sizeInTiles"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/sizeInTiles"
    returns QName(PackageNamespace(""), "int")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushshort           512
      pushbyte            16
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      divide
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "modifyZoom")
   method
    name "modifyZoom"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/modifyZoom"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 4
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      pushbyte            1
      greaterthan
      dup
      iffalse             L13

      pop
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "maxZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "maxZoom"), 0
      greaterequals
L13:
      dup
      iftrue              L28

      pop
      getlocal1
      pushbyte            1
      lessthan
      dup
      iffalse             L27

      pop
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom"), 0
      lessequals
L27:
      convert_b
L28:
      iffalse             L30

      returnvoid

L30:
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal2

      getlocal0
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      getlocal1
      multiply
      setproperty         QName(PackageNamespace(""), "zoom_")

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal3

      getlocal0
      getlocal2
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal3
      getproperty         QName(PackageNamespace(""), "x_")
      subtract
      getlocal2
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal3
      getproperty         QName(PackageNamespace(""), "y_")
      subtract
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "setZoom")
   method
    name "setZoom"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/setZoom"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 4
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "maxZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "maxZoom"), 0
      greaterthan
      dup
      iftrue              L13

      pop
      getlocal1
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom"), 0
      lessthan
L13:
      iffalse             L15

      returnvoid

L15:
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal2

      getlocal0
      getlocal1
      setproperty         QName(PackageNamespace(""), "zoom_")

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal3

      getlocal0
      getlocal2
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal3
      getproperty         QName(PackageNamespace(""), "x_")
      subtract
      getlocal2
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal3
      getproperty         QName(PackageNamespace(""), "y_")
      subtract
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setMinZoom")
   method
    name "setMinZoom"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/setMinZoom"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Integer(0)
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      pushbyte            0
      ifeq                L9

      getlocal0
      getlocal1
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "setZoom"), 1

      jump                L13

L9:
      getlocal0
      findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom"), 0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "setZoom"), 1

L13:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove")
   method
    name "canMove"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/canMove"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      pushnull
      equals
      dup
      iffalse             L13

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      pushnull
      equals
L13:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "increaseZoom")
   method
    name "increaseZoom"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/increaseZoom"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushbyte            2
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "modifyZoom"), 1

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "decreaseZoom")
   method
    name "decreaseZoom"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/decreaseZoom"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushdouble          0.5
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "modifyZoom"), 1

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveLeft")
   method
    name "moveLeft"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/moveLeft"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushbyte            -1
      pushbyte            0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveRight")
   method
    name "moveRight"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/moveRight"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushbyte            1
      pushbyte            0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveUp")
   method
    name "moveUp"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/moveUp"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushbyte            0
      pushbyte            -1
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveDown")
   method
    name "moveDown"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/moveDown"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "canMove"), 0
      iftrue              L6

      returnvoid

L6:
      getlocal0
      pushbyte            0
      pushbyte            1
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT")
   method
    name "movePosT"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/movePosT"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 7
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal3

      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeInTiles"), 0
      subtract
      convert_i
      setlocal            4

      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getlex              QName(PackageNamespace(""), "Math")
      getlocal3
      getlex              QName(PackageNamespace(""), "Math")
      getlocal            4
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal1
      add
      callproperty        QName(PackageNamespace(""), "min"), 2
      callproperty        QName(PackageNamespace(""), "max"), 2
      setproperty         QName(PackageNamespace(""), "x_")

      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getlex              QName(PackageNamespace(""), "Math")
      getlocal3
      getlex              QName(PackageNamespace(""), "Math")
      getlocal            4
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal2
      add
      callproperty        QName(PackageNamespace(""), "min"), 2
      callproperty        QName(PackageNamespace(""), "max"), 2
      setproperty         QName(PackageNamespace(""), "y_")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT")
   method
    name "mousePosT"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/mousePosT"
    returns QName(PackageNamespace("com.company.util"), "IntPoint")
    body
     maxstack 6
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlex              QName(PackageNamespace(""), "Math")
      pushbyte            0
      getlex              QName(PackageNamespace(""), "Math")
      pushshort           512
      pushbyte            1
      subtract
      getlex              QName(PackageNamespace(""), "mouseX")
      callproperty        QName(PackageNamespace(""), "min"), 2
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal2

      getlex              QName(PackageNamespace(""), "Math")
      pushbyte            0
      getlex              QName(PackageNamespace(""), "Math")
      pushshort           512
      pushbyte            1
      subtract
      getlex              QName(PackageNamespace(""), "mouseY")
      callproperty        QName(PackageNamespace(""), "min"), 2
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal1

      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal2
      pushbyte            16
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      divide
      add
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal1
      pushbyte            16
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      divide
      add
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "mouseRectT")
   method
    name "mouseRectT"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/mouseRectT"
    returns QName(PackageNamespace("flash.geom"), "Rectangle")
    body
     maxstack 7
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal1

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      pushnull
      ifne                L19

      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            1
      pushbyte            1
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      returnvalue

L19:
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      getproperty         QName(PackageNamespace(""), "x_")
      callproperty        QName(PackageNamespace(""), "min"), 2
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      getproperty         QName(PackageNamespace(""), "y_")
      callproperty        QName(PackageNamespace(""), "min"), 2
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      getproperty         QName(PackageNamespace(""), "x_")
      subtract
      callproperty        QName(PackageNamespace(""), "abs"), 1
      pushbyte            1
      add
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      getproperty         QName(PackageNamespace(""), "y_")
      subtract
      callproperty        QName(PackageNamespace(""), "abs"), 1
      pushbyte            1
      add
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "posTToPosP")
   method
    name "posTToPosP"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/posTToPosP"
    param QName(PackageNamespace("com.company.util"), "IntPoint")
    returns QName(PackageNamespace("com.company.util"), "IntPoint")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 4
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      subtract
      pushbyte            16
      multiply
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      subtract
      pushbyte            16
      multiply
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeTToSizeP")
   method
    name "sizeTToSizeP"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/sizeTToSizeP"
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "Number")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlex              QName(PackageNamespace(""), "drawSize")
      setlocal2

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      pushnull
      ifeq                L10

      pushbyte            1
      setlocal2

L10:
      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      pushbyte            16
      multiply
      getlocal2
      multiply
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectP")
   method
    name "mouseRectP"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/mouseRectP"
    returns QName(PackageNamespace("flash.geom"), "Rectangle")
    body
     maxstack 4
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PackageNamespace(""), "mouseRectT"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal2

      getlocal0
      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal2
      getproperty         QName(PackageNamespace(""), "x")
      getlocal2
      getproperty         QName(PackageNamespace(""), "y")
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "posTToPosP"), 1
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal1

      getlocal2
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      setproperty         QName(PackageNamespace(""), "x")

      getlocal2
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      setproperty         QName(PackageNamespace(""), "y")

      getlocal2
      getlocal0
      getlocal2
      getproperty         QName(PackageNamespace(""), "width")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeTToSizeP"), 1
      pushbyte            1
      subtract
      setproperty         QName(PackageNamespace(""), "width")

      getlocal2
      getlocal0
      getlocal2
      getproperty         QName(PackageNamespace(""), "height")
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "sizeTToSizeP"), 1
      pushbyte            1
      subtract
      setproperty         QName(PackageNamespace(""), "height")

      getlocal2
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onAddedToStage")
   method
    name "onAddedToStage"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onAddedToStage"
    param QName(PackageNamespace("flash.events"), "Event")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 3
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace(""), "addEventListener")
      pushstring          "mouseWheel"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseWheel")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      findpropstrict      QName(PackageNamespace(""), "addEventListener")
      pushstring          "mouseDown"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseDown")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      findpropstrict      QName(PackageNamespace(""), "addEventListener")
      pushstring          "mouseMove"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseMove")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      findpropstrict      QName(PackageNamespace(""), "addEventListener")
      pushstring          "rightClick"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseRightClick")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      getlex              QName(PackageNamespace(""), "stage")
      pushstring          "keyDown"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyDown")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      getlex              QName(PackageNamespace(""), "stage")
      pushstring          "keyUp"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyUp")
      callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onRemovedFromStage")
   method
    name "onRemovedFromStage"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onRemovedFromStage"
    param QName(PackageNamespace("flash.events"), "Event")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 3
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace(""), "removeEventListener")
      pushstring          "mouseWheel"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseWheel")
      callpropvoid        QName(PackageNamespace(""), "removeEventListener"), 2

      findpropstrict      QName(PackageNamespace(""), "removeEventListener")
      pushstring          "mouseDown"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseDown")
      callpropvoid        QName(PackageNamespace(""), "removeEventListener"), 2

      findpropstrict      QName(PackageNamespace(""), "removeEventListener")
      pushstring          "mouseMove"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseMove")
      callpropvoid        QName(PackageNamespace(""), "removeEventListener"), 2

      getlex              QName(PackageNamespace(""), "stage")
      pushstring          "keyDown"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyDown")
      callpropvoid        QName(PackageNamespace(""), "removeEventListener"), 2

      getlex              QName(PackageNamespace(""), "stage")
      pushstring          "keyUp"
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyUp")
      callpropvoid        QName(PackageNamespace(""), "removeEventListener"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyDown")
   method
    name "onKeyDown"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onKeyDown"
    param QName(PackageNamespace("flash.events"), "KeyboardEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "keyCode")
      setlocal2

      jump                L54

L6:
      label
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      pushnull
      ifne                L78

      getlocal0
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid

L18:
      label
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      pushnull
      ifne                L78

      getlocal0
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid

L30:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveLeft"), 0

      returnvoid

L34:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveRight"), 0

      returnvoid

L38:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveUp"), 0

      returnvoid

L42:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "moveDown"), 0

      returnvoid

L46:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "decreaseZoom"), 0

      returnvoid

L50:
      label
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "increaseZoom"), 0

      returnvoid

L54:
      pushbyte            16
      getlocal2
      ifstricteq          L6

      pushbyte            17
      getlocal2
      ifstricteq          L18

      pushbyte            37
      getlocal2
      ifstricteq          L30

      pushbyte            39
      getlocal2
      ifstricteq          L34

      pushbyte            38
      getlocal2
      ifstricteq          L38

      pushbyte            40
      getlocal2
      ifstricteq          L42

      pushshort           189
      getlocal2
      ifstricteq          L46

      pushshort           187
      getlocal2
      ifstricteq          L50

L78:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onKeyUp")
   method
    name "onKeyUp"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onKeyUp"
    param QName(PackageNamespace("flash.events"), "KeyboardEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "keyCode")
      convert_i
      pushint             16
      subtract_i
      lookupswitch        L20, [L8, L14]

L8:
      getlocal0
      pushnull
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid

L14:
      getlocal0
      pushnull
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      returnvoid

L20:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "clearSelectRect")
   method
    name "clearSelectRect"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/clearSelectRect"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      pushnull
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")

      getlocal0
      pushfalse
      setproperty         QName(PackageNamespace(""), "anchorLock")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseRightClick")
   method
    name "onMouseRightClick"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onMouseRightClick"
    param QName(PackageNamespace("flash.events"), "MouseEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 1
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseWheel")
   method
    name "onMouseWheel"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onMouseWheel"
    param QName(PackageNamespace("flash.events"), "MouseEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "delta")
      pushbyte            0
      ifngt               L9

      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "increaseZoom"), 0

      jump                L15

L9:
      getlocal1
      getproperty         QName(PackageNamespace(""), "delta")
      pushbyte            0
      ifnlt               L15

      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "decreaseZoom"), 0

L15:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "fill")
   method
    name "fill"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/fill"
    param QName(PackageNamespace("com.company.util"), "IntPoint")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace("com.company.util"), "IntPoint")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "point"
    paramname "layer"
    paramname "type"
    paramname "saved"
    body
     maxstack 5
     localcount 6
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace(""), "modifyTile")
      getlocal1
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal1
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal2
      getlocal3
      callpropvoid        QName(PackageNamespace(""), "modifyTile"), 4

      getlocal1
      dup
      setlocal            5

      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            1
      subtract
      pushbyte            0
      ifnge               L31

      getlocal            5
      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            1
      subtract
      getlocal            5
      swap
      setproperty         QName(PackageNamespace(""), "y_")

      findpropstrict      QName(PackageNamespace(""), "fill")
      getlocal            5
      getlocal2
      getlocal3
      getlocal            4
      callpropvoid        QName(PackageNamespace(""), "fill"), 4

L31:
      getlocal1
      dup
      setlocal            5

      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            1
      add
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      ifnle               L52

      getlocal            5
      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            1
      add
      getlocal            5
      swap
      setproperty         QName(PackageNamespace(""), "y_")

      findpropstrict      QName(PackageNamespace(""), "fill")
      getlocal            5
      getlocal2
      getlocal3
      getlocal            4
      callpropvoid        QName(PackageNamespace(""), "fill"), 4

L52:
      getlocal1
      dup
      setlocal            5

      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            1
      subtract
      pushbyte            0
      ifnge               L73

      getlocal            5
      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            1
      subtract
      getlocal            5
      swap
      setproperty         QName(PackageNamespace(""), "x_")

      findpropstrict      QName(PackageNamespace(""), "fill")
      getlocal            5
      getlocal2
      getlocal3
      getlocal            4
      callpropvoid        QName(PackageNamespace(""), "fill"), 4

L73:
      getlocal1
      dup
      setlocal            5

      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            1
      add
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      ifnle               L94

      getlocal            5
      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            1
      add
      getlocal            5
      swap
      setproperty         QName(PackageNamespace(""), "x_")

      findpropstrict      QName(PackageNamespace(""), "fill")
      getlocal            5
      getlocal2
      getlocal3
      getlocal            4
      callpropvoid        QName(PackageNamespace(""), "fill"), 4

L94:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseDown")
   method
    name "onMouseDown"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onMouseDown"
    param QName(PackageNamespace("flash.events"), "MouseEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 4
     localcount 8
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal            5

      getlocal0
      callproperty        QName(PackageNamespace(""), "mouseRectT"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal2

      getlex              QName(PackageNamespace(""), "drawSize")
      pushbyte            1
      ifngt               L19

      getlex              QName(PackageNamespace(""), "drawSize")
      findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")
      swap
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")

      getlex              QName(PackageNamespace(""), "drawSize")
      findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")
      swap
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")

L19:
      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace("com.company.util"), "IntPoint")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("com.company.util"), "IntPoint")>)
      setlocal3

      getlex              QName(PackageNamespace(""), "Math")
      getlocal2
      getproperty         QName(PackageNamespace(""), "x")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")
      add
      getlocal2
      getproperty         QName(PackageNamespace(""), "right")
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal            6

      getlex              QName(PackageNamespace(""), "Math")
      getlocal2
      getproperty         QName(PackageNamespace(""), "y")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")
      add
      getlocal2
      getproperty         QName(PackageNamespace(""), "bottom")
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal            7

      getlocal2
      getproperty         QName(PackageNamespace(""), "x")
      convert_i
      setlocal            4

      jump                L70

L52:
      label
      getlocal2
      getproperty         QName(PackageNamespace(""), "y")
      convert_i
      setlocal            5

      jump                L66

L58:
      label
      getlocal3
      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal            4
      getlocal            5
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      inclocal_i          5
L66:
      getlocal            5
      getlocal            7
      iflt                L58

      inclocal_i          4
L70:
      getlocal            4
      getlocal            6
      iflt                L52

      findpropstrict      QName(PackageNamespace(""), "dispatchEvent")
      findpropstrict      QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent")
      getlocal3
      constructprop       QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent"), 1
      callpropvoid        QName(PackageNamespace(""), "dispatchEvent"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "freezeSelect")
   method
    name "freezeSelect"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/freezeSelect"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PackageNamespace(""), "mouseRectT"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal1

      getlocal0
      getlocal1
      getproperty         QName(PackageNamespace(""), "width")
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")

      getlocal0
      getlocal1
      getproperty         QName(PackageNamespace(""), "height")
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "clearSelect")
   method
    name "clearSelect"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/clearSelect"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      pushbyte            0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")

      getlocal0
      pushbyte            0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "onMouseMove")
   method
    name "onMouseMove"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/onMouseMove"
    param QName(PackageNamespace("flash.events"), "MouseEvent")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 6
     localcount 9
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal2

      pushbyte            0
      setlocal            6

      pushnull
      setlocal            4

      pushundefined
      setlocal3

      pushbyte            0
      setlocal            7

      pushbyte            0
      setlocal            8

      pushbyte            0
      setlocal            5

      getlocal1
      getproperty         QName(PackageNamespace(""), "shiftKey")
      iftrue              L23

      getlocal0
      pushnull
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")

      jump                L31

L23:
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")
      pushnull
      ifne                L31

      getlocal0
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectAnchorT_")

L31:
      getlocal1
      getproperty         QName(PackageNamespace(""), "ctrlKey")
      iftrue              L38

      getlocal0
      pushnull
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")

      jump                L46

L38:
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      pushnull
      ifne                L46

      getlocal0
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")

L46:
      getlocal1
      getproperty         QName(PackageNamespace(""), "buttonDown")
      iffalse             L142

      getlex              QName(PackageNamespace(""), "drawSize")
      pushbyte            1
      ifngt               L127

      getlocal0
      callproperty        QName(PackageNamespace(""), "mouseRectT"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal            4

      getlex              QName(PackageNamespace(""), "drawSize")
      pushbyte            1
      ifngt               L67

      getlex              QName(PackageNamespace(""), "drawSize")
      findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")
      swap
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")

      getlex              QName(PackageNamespace(""), "drawSize")
      findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")
      swap
      setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")

L67:
      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace("com.company.util"), "IntPoint")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("com.company.util"), "IntPoint")>)
      setlocal3

      getlex              QName(PackageNamespace(""), "Math")
      getlocal            4
      getproperty         QName(PackageNamespace(""), "x")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectWidthOverride")
      add
      getlocal            4
      getproperty         QName(PackageNamespace(""), "right")
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal            7

      getlex              QName(PackageNamespace(""), "Math")
      getlocal            4
      getproperty         QName(PackageNamespace(""), "y")
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "rectHeightOverride")
      add
      getlocal            4
      getproperty         QName(PackageNamespace(""), "bottom")
      callproperty        QName(PackageNamespace(""), "max"), 2
      convert_i
      setlocal            8

      getlocal            4
      getproperty         QName(PackageNamespace(""), "x")
      convert_i
      setlocal            5

      jump                L118

L100:
      label
      getlocal            4
      getproperty         QName(PackageNamespace(""), "y")
      convert_i
      setlocal            6

      jump                L114

L106:
      label
      getlocal3
      findpropstrict      QName(PackageNamespace("com.company.util"), "IntPoint")
      getlocal            5
      getlocal            6
      constructprop       QName(PackageNamespace("com.company.util"), "IntPoint"), 2
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      inclocal_i          6
L114:
      getlocal            6
      getlocal            8
      iflt                L106

      inclocal_i          5
L118:
      getlocal            5
      getlocal            7
      iflt                L100

      findpropstrict      QName(PackageNamespace(""), "dispatchEvent")
      findpropstrict      QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent")
      getlocal3
      constructprop       QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent"), 1
      callpropvoid        QName(PackageNamespace(""), "dispatchEvent"), 1

      jump                L141

L127:
      findpropstrict      QName(PackageNamespace(""), "dispatchEvent")
      findpropstrict      QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent")
      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace("com.company.util"), "IntPoint")
      applytype           1
      pushbyte            1
      construct           1
      dup
      pushbyte            0
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

      constructprop       QName(PackageInternalNs("com.company.assembleegameclient.mapeditor"), "TilesEvent"), 1
      callpropvoid        QName(PackageNamespace(""), "dispatchEvent"), 1

L141:
      jump                L169

L142:
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      pushnull
      ifeq                L167

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mousePosT"), 0
      coerce              QName(PackageNamespace("com.company.util"), "IntPoint")
      setlocal2

      getlocal0
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal2
      getproperty         QName(PackageNamespace(""), "x_")
      subtract
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseMoveAnchorT_")
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal2
      getproperty         QName(PackageNamespace(""), "y_")
      subtract
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "movePosT"), 2

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "draw"), 0

      jump                L169

L167:
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawOverlay"), 0

L169:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "getOrCreateTile")
   method
    name "getOrCreateTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/getOrCreateTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 3
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      multiply
      add
      convert_i
      setlocal3

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal3
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      dup
      setlocal            4

      pushnull
      ifeq                L20

      getlocal            4
      returnvalue

L20:
      findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile"), 0
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal            4

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal3
      getlocal            4
      setproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

      getlocal            4
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "clearTile")
   method
    name "clearTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/clearTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 4
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      getlocal1
      getlocal2
      getlex              QName(PackageNamespace(""), "NUM_SQUARES")
      multiply
      add
      deleteproperty      MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawTile")
   method
    name "drawTile"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/drawTile"
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace(""), "int")
    param QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 6
     localcount 9
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal            8

      pushnull
      setlocal            5

      pushbyte            0
      setlocal            6

      pushnull
      setlocal            4

      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal1
      pushbyte            16
      multiply
      getlocal2
      pushbyte            16
      multiply
      pushbyte            16
      pushbyte            16
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal            7

      getlocal0
      getproperty         QName(PackageNamespace(""), "fullMap_")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "erase"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "erase"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "erase"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "regionMap_")
      getlocal1
      getlocal2
      pushbyte            0
      callpropvoid        QName(PackageNamespace(""), "setPixel32"), 3

      getlocal3
      pushnull
      ifne                L52

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "erase"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "erase"), 1

      returnvoid

L52:
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            0
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L73

      getlex              QName(PackageNamespace("com.company.assembleegameclient.map"), "GroundLibrary")
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            0
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      callproperty        QName(PackageNamespace(""), "getBitmapData"), 1
      coerce              QName(PackageNamespace("flash.display"), "BitmapData")
      setlocal            8

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")
      getlocal            8
      getlocal            8
      getproperty         QName(PackageNamespace(""), "rect")
      getlocal            7
      callpropvoid        QName(PackageNamespace(""), "copyTo"), 3

L73:
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            1
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L113

      getlex              QName(PackageNamespace("com.company.assembleegameclient.objects"), "ObjectLibrary")
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            1
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      callproperty        QName(PackageNamespace(""), "getTextureFromType"), 1
      coerce              QName(PackageNamespace("flash.display"), "BitmapData")
      setlocal            5

      getlex              QName(PackageNamespace("com.company.assembleegameclient.objects"), "ObjectLibrary")
      getproperty         QName(PackageNamespace(""), "xmlLibrary_")
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            1
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      getproperty         Multiname("Class", [PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce_s
      setlocal            4

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")
      getlocal            5
      getlocal            5
      getproperty         QName(PackageNamespace(""), "rect")
      getlocal            7
      getlocal            4
      pushstring          "DoubleWall"
      equals
      dup
      iftrue              L112

      pop
      getlocal            4
      pushstring          "Wall"
      equals
L112:
      callpropvoid        QName(PackageNamespace(""), "copyTo"), 4

L113:
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            2
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L135

      getlex              QName(PackageNamespace("com.company.assembleegameclient.map"), "RegionLibrary")
      getlocal3
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            2
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      callproperty        QName(PackageNamespace(""), "getColor"), 1
      convert_u
      setlocal            6

      getlocal0
      getproperty         QName(PackageNamespace(""), "regionMap_")
      getlocal1
      getlocal2
      pushint             1593835520
      getlocal            6
      bitor
      callpropvoid        QName(PackageNamespace(""), "setPixel32"), 3

L135:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawOverlay")
   method
    name "drawOverlay"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/drawOverlay"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 5
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "mouseRectP"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal2

      getlocal0
      getproperty         QName(PackageNamespace(""), "overlay_")
      getproperty         QName(PackageNamespace(""), "graphics")
      coerce              QName(PackageNamespace("flash.display"), "Graphics")
      setlocal1

      getlocal1
      callpropvoid        QName(PackageNamespace(""), "clear"), 0

      getlocal1
      pushbyte            1
      pushint             16777215
      callpropvoid        QName(PackageNamespace(""), "lineStyle"), 2

      getlocal1
      pushint             16777215
      pushdouble          0.1
      callpropvoid        QName(PackageNamespace(""), "beginFill"), 2

      getlocal1
      getlocal2
      getproperty         QName(PackageNamespace(""), "x")
      getlocal2
      getproperty         QName(PackageNamespace(""), "y")
      getlocal2
      getproperty         QName(PackageNamespace(""), "width")
      getlocal2
      getproperty         QName(PackageNamespace(""), "height")
      callpropvoid        QName(PackageNamespace(""), "drawRect"), 4

      getlocal1
      callpropvoid        QName(PackageNamespace(""), "endFill"), 0

      getlocal1
      callpropvoid        QName(PackageNamespace(""), "lineStyle"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "draw")
   method
    name "draw"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/draw"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 7
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal1

      pushbyte            0
      setlocal2

      pushnull
      setlocal            4

      pushshort           512
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      divide
      convert_i
      setlocal3

      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getproperty         QName(PackageNamespace(""), "rect")
      pushbyte            0
      callpropvoid        QName(PackageNamespace(""), "fillRect"), 2

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowGroundLayer_")
      iffalse             L46

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            16
      multiply
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            16
      multiply
      getlocal3
      getlocal3
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getproperty         QName(PackageNamespace(""), "rect")
      callpropvoid        QName(PackageNamespace(""), "copyFrom"), 3

L46:
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowObjectLayer_")
      iffalse             L71

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      pushbyte            16
      multiply
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      pushbyte            16
      multiply
      getlocal3
      getlocal3
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getproperty         QName(PackageNamespace(""), "rect")
      callpropvoid        QName(PackageNamespace(""), "copyFrom"), 3

L71:
      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "ifShowRegionLayer_")
      iffalse             L151

      findpropstrict      QName(PackageNamespace("flash.geom"), "Matrix")
      constructprop       QName(PackageNamespace("flash.geom"), "Matrix"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Matrix")
      setlocal1

      getlocal1
      callpropvoid        QName(PackageNamespace(""), "identity"), 0

      pushbyte            16
      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      multiply
      convert_i
      setlocal2

      getlocal0
      getproperty         QName(PackageNamespace(""), "zoom_")
      pushbyte            2
      ifngt               L126

      findpropstrict      QName(PackageNamespace(""), "BitmapDataSpy")
      pushshort           512
      getlocal2
      divide
      pushshort           512
      getlocal2
      divide
      constructprop       QName(PackageNamespace(""), "BitmapDataSpy"), 2
      coerce              QName(PackageNamespace("flash.display"), "BitmapData")
      dup
      setlocal            4

      getlocal0
      getproperty         QName(PackageNamespace(""), "regionMap_")
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      getlocal3
      getlocal3
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      getlex              QName(PackageNamespace("com.company.util"), "PointUtil")
      getproperty         QName(PackageNamespace(""), "ORIGIN")
      callpropvoid        QName(PackageNamespace(""), "copyPixels"), 3

      getlocal1
      getlocal2
      getlocal2
      callpropvoid        QName(PackageNamespace(""), "scale"), 2

      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getlocal            4
      getlocal1
      callpropvoid        QName(PackageNamespace(""), "draw"), 2

      jump                L151

L126:
      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "x_")
      negate
      getlocal0
      getproperty         QName(PackageNamespace(""), "posT_")
      getproperty         QName(PackageNamespace(""), "y_")
      negate
      callpropvoid        QName(PackageNamespace(""), "translate"), 2

      getlocal1
      getlocal2
      getlocal2
      callpropvoid        QName(PackageNamespace(""), "scale"), 2

      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getlocal0
      getproperty         QName(PackageNamespace(""), "regionMap_")
      getlocal1
      pushnull
      pushnull
      getlocal0
      getproperty         QName(PackageNamespace(""), "map_")
      getproperty         QName(PackageNamespace(""), "rect")
      callpropvoid        QName(PackageNamespace(""), "draw"), 5

L151:
      getlocal0
      callpropvoid        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "drawOverlay"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "generateThumbnail")
   method
    name "generateThumbnail"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/com.company.assembleegameclient.mapeditor:MEMap/generateThumbnail"
    returns QName(PackageNamespace("flash.utils"), "ByteArray")
    body
     maxstack 7
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PackageNamespace(""), "getTileBounds"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Rectangle")
      setlocal3

      pushbyte            8
      setlocal1

      findpropstrict      QName(PackageNamespace("flash.display"), "BitmapData")
      getlocal3
      getproperty         QName(PackageNamespace(""), "width")
      getlocal1
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "height")
      getlocal1
      multiply
      constructprop       QName(PackageNamespace("flash.display"), "BitmapData"), 2
      coerce              QName(PackageNamespace("flash.display"), "BitmapData")
      setlocal2

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "groundLayer_")
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal3
      getproperty         QName(PackageNamespace(""), "x")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "y")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "width")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "height")
      pushbyte            16
      multiply
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      getlocal2
      getlocal2
      getproperty         QName(PackageNamespace(""), "rect")
      callpropvoid        QName(PackageNamespace(""), "copyFrom"), 3

      getlocal0
      getproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "objectLayer_")
      findpropstrict      QName(PackageNamespace("flash.geom"), "Rectangle")
      getlocal3
      getproperty         QName(PackageNamespace(""), "x")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "y")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "width")
      pushbyte            16
      multiply
      getlocal3
      getproperty         QName(PackageNamespace(""), "height")
      pushbyte            16
      multiply
      constructprop       QName(PackageNamespace("flash.geom"), "Rectangle"), 4
      getlocal2
      getlocal2
      getproperty         QName(PackageNamespace(""), "rect")
      callpropvoid        QName(PackageNamespace(""), "copyFrom"), 3

      findpropstrict      QName(PackageNamespace("flash.geom"), "Matrix")
      constructprop       QName(PackageNamespace("flash.geom"), "Matrix"), 0
      coerce              QName(PackageNamespace("flash.geom"), "Matrix")
      dup
      setlocal            4

      callpropvoid        QName(PackageNamespace(""), "identity"), 0

      getlocal            4
      getlocal3
      getproperty         QName(PackageNamespace(""), "x")
      negate
      getlocal3
      getproperty         QName(PackageNamespace(""), "y")
      negate
      callpropvoid        QName(PackageNamespace(""), "translate"), 2

      getlocal            4
      getlocal1
      getlocal1
      callpropvoid        QName(PackageNamespace(""), "scale"), 2

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "regionMap_")
      getlocal            4
      callpropvoid        QName(PackageNamespace(""), "draw"), 2

      getlex              QName(PackageNamespace("com.adobe.images"), "PNGEncoder")
      getlocal2
      callproperty        QName(PackageNamespace(""), "encode"), 1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getMapStatistics")
   method
    name "getMapStatistics"
    refid "com.company.assembleegameclient.mapeditor:MEMap/instance/getMapStatistics"
    returns QName(PackageNamespace(""), "Object")
    body
     maxstack 12
     localcount 9
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal            4

      pushbyte            0
      setlocal3

      pushbyte            0
      setlocal1

      pushbyte            0
      setlocal2

      pushbyte            0
      setlocal            5

      pushbyte            0
      setlocal            6

      pushbyte            0
      setlocal            8

      getlocal0
      getproperty         QName(PackageNamespace(""), "tileDict_")
      setlocal            7

      jump                L61

L20:
      label
      getlocal            7
      getlocal            8
      nextvalue
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal            4

      inclocal_i          6
      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            0
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L34

      inclocal_i          3
L34:
      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            1
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L41

      inclocal_i          1
L41:
      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            2
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            -1
      ifeq                L61

      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            2
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            48
      ifne                L54

      inclocal_i          2
L54:
      getlocal            4
      getproperty         QName(PackageNamespace(""), "types_")
      pushbyte            2
      getproperty         MultinameL([PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      pushbyte            1
      ifne                L61

      inclocal_i          5
L61:
      hasnext2            7, 8
      iftrue              L20

      pushstring          "numObjects"
      getlocal1
      pushstring          "numGrounds"
      getlocal3
      pushstring          "numExits"
      getlocal2
      pushstring          "numEntries"
      getlocal            5
      pushstring          "numTiles"
      getlocal            6
      pushstring          "thumbnail"
      getlocal0
      callproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "generateThumbnail"), 0
      newobject           6
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "com.company.assembleegameclient.mapeditor:MEMap/class/init"
  body
   maxstack 2
   localcount 1
   initscopedepth 0
   maxscopedepth 1
   code
    getlocal0
    pushscope

    getlex              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "MEMap_transbackgroundEmbed_")
    findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundEmbed_")
    swap
    setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundEmbed_")

    findpropstrict      QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundEmbed_")
    constructprop       QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundEmbed_"), 0
    getproperty         Multiname("bitmapData", [PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:MEMap"), StaticProtectedNs("flash.display:Sprite"), StaticProtectedNs("flash.display:DisplayObjectContainer"), StaticProtectedNs("flash.display:InteractiveObject"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher"), StaticProtectedNs("Object"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), PrivateNamespace("FilePrivateNS:MEMap"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
    findproperty        QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundBD_")
    swap
    setproperty         QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundBD_")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "MAX_ALLOWED_SQUARES") type QName(PackageNamespace(""), "int") value Integer(512) end
 trait const QName(PackageNamespace(""), "SQUARE_SIZE") type QName(PackageNamespace(""), "int") value Integer(16) end
 trait const QName(PackageNamespace(""), "SIZE") type QName(PackageNamespace(""), "int") value Integer(512) end
 trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundEmbed_") type QName(PackageNamespace(""), "Class") end
 trait slot QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "transbackgroundBD_") type QName(PackageNamespace("flash.display"), "BitmapData") end
 trait slot QName(PackageNamespace(""), "NUM_SQUARES") type QName(PackageNamespace(""), "int") value Integer(128) end
 trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "minZoom")
  method
   name "minZoom"
   refid "com.company.assembleegameclient.mapeditor:MEMap/class/com.company.assembleegameclient.mapeditor:MEMap/minZoom"
   returns QName(PackageNamespace(""), "Number")
   body
    maxstack 2
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            16
     getlex              QName(PackageNamespace(""), "NUM_SQUARES")
     divide
     pushbyte            2
     multiply
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PrivateNamespace("com.company.assembleegameclient.mapeditor:MEMap"), "maxZoom")
  method
   name "maxZoom"
   refid "com.company.assembleegameclient.mapeditor:MEMap/class/com.company.assembleegameclient.mapeditor:MEMap/maxZoom"
   returns QName(PackageNamespace(""), "Number")
   body
    maxstack 1
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            16
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
