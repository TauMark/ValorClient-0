class
 refid "com.greensock.events:TweenEvent"
 instance QName(PackageNamespace("com.greensock.events"), "TweenEvent")
  extends QName(PackageNamespace("flash.events"), "Event")
  flag SEALED
  iinit
   name "TweenEvent"
   refid "com.greensock.events:TweenEvent/instance/init"
   param QName(PackageNamespace(""), "String")
   param QName(PackageNamespace(""), "Boolean")
   param QName(PackageNamespace(""), "Boolean")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional False()
   optional False()
   paramname "type"
   paramname "bubbles"
   paramname "cancelable"
   body
    maxstack 4
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     getlocal1
     getlocal2
     getlocal3
     constructsuper      3

     returnvoid
    end ; code
   end ; body
  end ; method
  trait method QName(PackageNamespace(""), "clone") flag OVERRIDE
   method
    name "clone"
    refid "com.greensock.events:TweenEvent/instance/clone"
    returns QName(PackageNamespace("flash.events"), "Event")
    body
     maxstack 4
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("com.greensock.events"), "TweenEvent")
      getlocal0
      getproperty         QName(PackageNamespace(""), "type")
      getlocal0
      getproperty         QName(PackageNamespace(""), "bubbles")
      getlocal0
      getproperty         QName(PackageNamespace(""), "cancelable")
      constructprop       QName(PackageNamespace("com.greensock.events"), "TweenEvent"), 3
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "com.greensock.events:TweenEvent/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "VERSION") type QName(PackageNamespace(""), "Number") value Double(12) end
 trait const QName(PackageNamespace(""), "START") type QName(PackageNamespace(""), "String") value Utf8("start") end
 trait const QName(PackageNamespace(""), "UPDATE") type QName(PackageNamespace(""), "String") value Utf8("change") end
 trait const QName(PackageNamespace(""), "COMPLETE") type QName(PackageNamespace(""), "String") value Utf8("complete") end
 trait const QName(PackageNamespace(""), "REVERSE_COMPLETE") type QName(PackageNamespace(""), "String") value Utf8("reverseComplete") end
 trait const QName(PackageNamespace(""), "REPEAT") type QName(PackageNamespace(""), "String") value Utf8("repeat") end
end ; class
