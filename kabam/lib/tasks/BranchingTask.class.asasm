class
 refid "kabam.lib.tasks:BranchingTask"
 instance QName(PackageNamespace("kabam.lib.tasks"), "BranchingTask")
  extends QName(PackageNamespace("kabam.lib.tasks"), "BaseTask")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.lib.tasks:BranchingTask")
  iinit
   name "BranchingTask"
   refid "kabam.lib.tasks:BranchingTask/instance/init"
   param QName(PackageNamespace("kabam.lib.tasks"), "Task")
   param QName(PackageNamespace("kabam.lib.tasks"), "Task")
   param QName(PackageNamespace("kabam.lib.tasks"), "Task")
   flag HAS_OPTIONAL
   flag HAS_PARAM_NAMES
   optional Null()
   optional Null()
   paramname "_arg1"
   paramname "_arg2"
   paramname "_arg3"
   body
    maxstack 2
    localcount 4
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     getlocal0
     getlocal1
     setproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "task")

     getlocal0
     getlocal2
     setproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "success")

     getlocal0
     getlocal3
     setproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "failure")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "task") type QName(PackageNamespace("kabam.lib.tasks"), "Task") end
  trait slot QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "success") type QName(PackageNamespace("kabam.lib.tasks"), "Task") end
  trait slot QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "failure") type QName(PackageNamespace("kabam.lib.tasks"), "Task") end
  trait method QName(PackageNamespace(""), "addSuccessTask")
   method
    name "addSuccessTask"
    refid "kabam.lib.tasks:BranchingTask/instance/addSuccessTask"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "success")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "addFailureTask")
   method
    name "addFailureTask"
    refid "kabam.lib.tasks:BranchingTask/instance/addFailureTask"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "failure")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(ProtectedNamespace("kabam.lib.tasks:BranchingTask"), "startTask") flag OVERRIDE
   method
    name "startTask"
    refid "kabam.lib.tasks:BranchingTask/instance/kabam.lib.tasks:BranchingTask:startTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "task")
      getproperty         QName(Namespace("kabam.lib.tasks:Task"), "finished")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "onTaskFinished")
      callpropvoid        QName(PackageNamespace(""), "addOnce"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "task")
      callpropvoid        QName(Namespace("kabam.lib.tasks:Task"), "start"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "onTaskFinished")
   method
    name "onTaskFinished"
    refid "kabam.lib.tasks:BranchingTask/instance/kabam.lib.tasks:BranchingTask/instance/onTaskFinished"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    param QName(PackageNamespace(""), "Boolean")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Utf8("")
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 2
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal2
      iffalse             L9

      getlocal0
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "success")
      callpropvoid        QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "handleBranchTask"), 1

      jump                L13

L9:
      getlocal0
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "failure")
      callpropvoid        QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "handleBranchTask"), 1

L13:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "handleBranchTask")
   method
    name "handleBranchTask"
    refid "kabam.lib.tasks:BranchingTask/instance/kabam.lib.tasks:BranchingTask/instance/handleBranchTask"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      iffalse             L12

      getlocal1
      getproperty         QName(Namespace("kabam.lib.tasks:Task"), "finished")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "onBranchComplete")
      callpropvoid        QName(PackageNamespace(""), "addOnce"), 1

      getlocal1
      callpropvoid        QName(Namespace("kabam.lib.tasks:Task"), "start"), 0

      jump                L15

L12:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      pushtrue
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 1

L15:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.lib.tasks:BranchingTask"), "onBranchComplete")
   method
    name "onBranchComplete"
    refid "kabam.lib.tasks:BranchingTask/instance/kabam.lib.tasks:BranchingTask/instance/onBranchComplete"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    param QName(PackageNamespace(""), "Boolean")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Utf8("")
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 3
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      getlocal2
      getlocal3
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.lib.tasks:BranchingTask/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
