class
 refid "kabam.lib.ui.impl:HorizontalLayout"
 instance QName(PackageNamespace("kabam.lib.ui.impl"), "HorizontalLayout")
  extends QName(PackageNamespace(""), "Object")
  implements QName(PackageNamespace("kabam.lib.ui.api"), "Layout")
  flag SEALED
  iinit
   refid "kabam.lib.ui.impl:HorizontalLayout/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("kabam.lib.ui.impl:HorizontalLayout"), "padding") type QName(PackageNamespace(""), "int") value Integer(0) end
  trait method QName(PackageNamespace(""), "getPadding")
   method
    name "getPadding"
    refid "kabam.lib.ui.impl:HorizontalLayout/instance/getPadding"
    returns QName(PackageNamespace(""), "int")
    body
     maxstack 1
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.ui.impl:HorizontalLayout"), "padding")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setPadding")
   method
    name "setPadding"
    refid "kabam.lib.ui.impl:HorizontalLayout/instance/setPadding"
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.lib.ui.impl:HorizontalLayout"), "padding")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "layout")
   method
    name "layout"
    refid "kabam.lib.ui.impl:HorizontalLayout/instance/layout"
    param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("flash.display"), "DisplayObject")>)
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Integer(0)
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 3
     localcount 7
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal            4

      pushbyte            0
      setlocal            6

      getlocal2
      setlocal3

      getlocal1
      getproperty         QName(PackageNamespace(""), "length")
      convert_i
      setlocal            5

      jump                L32

L13:
      label
      getlocal1
      getlocal            6
      getproperty         MultinameL([PrivateNamespace("kabam.lib.ui.impl:HorizontalLayout"), ProtectedNamespace("kabam.lib.ui.impl:HorizontalLayout"), StaticProtectedNs("kabam.lib.ui.impl:HorizontalLayout"), StaticProtectedNs("Object"), PackageNamespace("kabam.lib.ui.impl"), PackageInternalNs("kabam.lib.ui.impl"), PrivateNamespace("FilePrivateNS:HorizontalLayout"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce              QName(PackageNamespace("flash.display"), "DisplayObject")
      dup
      setlocal            4

      getlocal3
      setproperty         QName(PackageNamespace(""), "x")

      getlocal3
      getlocal            4
      getproperty         QName(PackageNamespace(""), "width")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.lib.ui.impl:HorizontalLayout"), "padding")
      add
      add
      convert_i
      setlocal3

      inclocal_i          6
L32:
      getlocal            6
      getlocal            5
      iflt                L13

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.lib.ui.impl:HorizontalLayout/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
