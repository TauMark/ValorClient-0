class
 refid "kabam.rotmg.classes.model:CharacterSkins"
 instance QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkins")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  iinit
   refid "kabam.rotmg.classes.model:CharacterSkins/instance/init"
   body
    maxstack 2
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
     applytype           1
     pushbyte            0
     construct           1
     findproperty        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
     swap
     initproperty        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")

     newobject           0
     findproperty        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "map")
     swap
     initproperty        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "map")

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait const QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")>) end
  trait const QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "map") type QName(PackageNamespace(""), "Object") end
  trait slot QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "defaultSkin") type QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin") end
  trait slot QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin") type QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin") end
  trait slot QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "maxLevelAchieved") type QName(PackageNamespace(""), "int") end
  trait method QName(PackageNamespace(""), "getCount")
   method
    name "getCount"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getCount"
    returns QName(PackageNamespace(""), "int")
    body
     maxstack 1
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      getproperty         QName(PackageNamespace(""), "length")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getDefaultSkin")
   method
    name "getDefaultSkin"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getDefaultSkin"
    returns QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    body
     maxstack 1
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "defaultSkin")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getSelectedSkin")
   method
    name "getSelectedSkin"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getSelectedSkin"
    returns QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    body
     maxstack 1
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getSkinAt")
   method
    name "getSkinAt"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getSkinAt"
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      getlocal1
      getproperty         MultinameL([PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("Object"), PackageNamespace("kabam.rotmg.classes.model"), PackageInternalNs("kabam.rotmg.classes.model"), PrivateNamespace("FilePrivateNS:CharacterSkins"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "addSkin")
   method
    name "addSkin"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/addSkin"
    param QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional False()
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 3
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "changed")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "onSkinChanged")
      callpropvoid        QName(PackageNamespace(""), "add"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      getlocal1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "map")
      getlocal1
      getproperty         QName(PackageNamespace(""), "id")
      getlocal1
      setproperty         MultinameL([PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("Object"), PackageNamespace("kabam.rotmg.classes.model"), PackageInternalNs("kabam.rotmg.classes.model"), PrivateNamespace("FilePrivateNS:CharacterSkins"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

      getlocal0
      getlocal1
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "updateSkinState"), 1

      getlocal2
      iffalse             L35

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "defaultSkin")

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")
      iftrue              L34

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")

      getlocal1
      pushtrue
      callpropvoid        QName(PackageNamespace(""), "setIsSelected"), 1

L34:
      jump                L41

L35:
      getlocal1
      callproperty        QName(PackageNamespace(""), "getIsSelected"), 0
      iffalse             L41

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")

L41:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "onSkinChanged")
   method
    name "onSkinChanged"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/kabam.rotmg.classes.model:CharacterSkins/instance/onSkinChanged"
    param QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      callproperty        QName(PackageNamespace(""), "getIsSelected"), 0
      dup
      iffalse             L12

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")
      getlocal1
      equals
      not
L12:
      iffalse             L27

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")
      dup
      iffalse             L23

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")
      pushfalse
      callproperty        QName(PackageNamespace(""), "setIsSelected"), 1
      coerce_a
L23:
      pop
      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "selectedSkin")

L27:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "updateSkins")
   method
    name "updateSkins"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/updateSkins"
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal2

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "maxLevelAchieved")

      pushbyte            0
      setlocal            4

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      setlocal3

      jump                L22

L13:
      label
      getlocal3
      getlocal            4
      nextvalue
      coerce              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
      setlocal2

      getlocal0
      getlocal2
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "updateSkinState"), 1

L22:
      hasnext2            3, 4
      iftrue              L13

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "updateSkinState")
   method
    name "updateSkinState"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/kabam.rotmg.classes.model:CharacterSkins/instance/updateSkinState"
    param QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 3
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "skinSelectEnabled")
      iftrue              L10

      getlocal1
      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
      getproperty         QName(PackageNamespace(""), "UNLISTED")
      callpropvoid        QName(PackageNamespace(""), "setState"), 1

      jump                L19

L10:
      getlocal1
      callproperty        QName(PackageNamespace(""), "getState"), 0
      callproperty        QName(PackageNamespace(""), "isSkinStateDeterminedByLevel"), 0
      iffalse             L19

      getlocal1
      getlocal0
      getlocal1
      callproperty        QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "getSkinState"), 1
      callpropvoid        QName(PackageNamespace(""), "setState"), 1

L19:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "getSkinState")
   method
    name "getSkinState"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/kabam.rotmg.classes.model:CharacterSkins/instance/getSkinState"
    param QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    returns QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "skinSelectEnabled")
      iftrue              L8

      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
      getproperty         QName(PackageNamespace(""), "UNLISTED")
      returnvalue

L8:
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "maxLevelAchieved")
      getlocal1
      getproperty         QName(PackageNamespace(""), "unlockLevel")
      greaterequals
      dup
      iffalse             L20

      pop
      getlocal1
      getproperty         QName(PackageNamespace(""), "unlockSpecial")
      pushnull
      equals
L20:
      iffalse             L24

      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
      getproperty         QName(PackageNamespace(""), "PURCHASABLE")
      returnvalue

L24:
      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
      getproperty         QName(PackageNamespace(""), "LOCKED")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getSkin")
   method
    name "getSkin"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getSkin"
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "map")
      getlocal1
      getproperty         MultinameL([PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins"), StaticProtectedNs("Object"), PackageNamespace("kabam.rotmg.classes.model"), PackageInternalNs("kabam.rotmg.classes.model"), PrivateNamespace("FilePrivateNS:CharacterSkins"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      dup
      iftrue              L12

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "defaultSkin")
      coerce_a
L12:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getAllSkins")
   method
    name "getAllSkins"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getAllSkins"
    returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")>)
    body
     maxstack 1
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlex              QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getListedSkins")
   method
    name "getListedSkins"
    refid "kabam.rotmg.classes.model:CharacterSkins/instance/getListedSkins"
    returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")>)
    body
     maxstack 2
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal1

      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")>)
      setlocal2

      pushbyte            0
      setlocal            4

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.classes.model:CharacterSkins"), "skins")
      setlocal3

      jump                L30

L16:
      label
      getlocal3
      getlocal            4
      nextvalue
      coerce              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkin")
      setlocal1

      getlocal1
      callproperty        QName(PackageNamespace(""), "getState"), 0
      getlex              QName(PackageNamespace("kabam.rotmg.classes.model"), "CharacterSkinState")
      getproperty         QName(PackageNamespace(""), "UNLISTED")
      ifeq                L30

      getlocal2
      getlocal1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L30:
      hasnext2            3, 4
      iftrue              L16

      getlocal2
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.classes.model:CharacterSkins/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
