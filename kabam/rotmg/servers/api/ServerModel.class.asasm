class
 refid "kabam.rotmg.servers.api:ServerModel"
 instance QName(PackageNamespace("kabam.rotmg.servers.api"), "ServerModel")
  flag INTERFACE
  iinit
   refid "kabam.rotmg.servers.api:ServerModel/instance/init"
  end ; method
  trait method QName(Namespace("kabam.rotmg.servers.api:ServerModel"), "setServers")
   method
    name "setServers"
    refid "kabam.rotmg.servers.api:ServerModel/instance/kabam.rotmg.servers.api:ServerModel:setServers"
    param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.servers.api"), "Server")>)
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
   end ; method
  end ; trait
  trait method QName(Namespace("kabam.rotmg.servers.api:ServerModel"), "getServer")
   method
    name "getServer"
    refid "kabam.rotmg.servers.api:ServerModel/instance/kabam.rotmg.servers.api:ServerModel:getServer"
    returns QName(PackageNamespace("kabam.rotmg.servers.api"), "Server")
   end ; method
  end ; trait
  trait method QName(Namespace("kabam.rotmg.servers.api:ServerModel"), "isServerAvailable")
   method
    name "isServerAvailable"
    refid "kabam.rotmg.servers.api:ServerModel/instance/kabam.rotmg.servers.api:ServerModel:isServerAvailable"
    returns QName(PackageNamespace(""), "Boolean")
   end ; method
  end ; trait
  trait method QName(Namespace("kabam.rotmg.servers.api:ServerModel"), "getServers")
   method
    name "getServers"
    refid "kabam.rotmg.servers.api:ServerModel/instance/kabam.rotmg.servers.api:ServerModel:getServers"
    returns TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.servers.api"), "Server")>)
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.servers.api:ServerModel/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
