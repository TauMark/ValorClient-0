class
 refid "kabam.rotmg.editor:EditorConfig"
 instance QName(PackageNamespace("kabam.rotmg.editor"), "EditorConfig")
  extends QName(PackageNamespace(""), "Object")
  implements QName(PackageNamespace("robotlegs.bender.framework.api"), "IConfig")
  flag SEALED
  iinit
   refid "kabam.rotmg.editor:EditorConfig/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace(""), "context") flag METADATA type QName(PackageNamespace("robotlegs.bender.framework.api"), "IContext")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "contextView") flag METADATA type QName(PackageNamespace("flash.display"), "DisplayObjectContainer")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "injector") flag METADATA type QName(PackageNamespace("org.swiftsuspenders"), "Injector")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "commandMap") flag METADATA type QName(PackageNamespace("robotlegs.bender.extensions.signalCommandMap.api"), "ISignalCommandMap")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "mediatorMap") flag METADATA type QName(PackageNamespace("robotlegs.bender.extensions.mediatorMap.api"), "IMediatorMap")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "startupSequence") flag METADATA type QName(PackageNamespace("kabam.rotmg.startup.control"), "StartupSequence")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "layers") type QName(PackageNamespace("kabam.rotmg.core.view"), "Layers") end
  trait method QName(PackageNamespace(""), "configure")
   method
    name "configure"
    refid "kabam.rotmg.editor:EditorConfig/instance/configure"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureServices"), 0

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureSignals"), 0

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureCommands"), 0

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureViews"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.model"), "SearchModel")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "startupSequence")
      getlex              QName(PackageNamespace("kabam.rotmg.core.signals"), "SetupDomainSecuritySignal")
      callpropvoid        QName(PackageNamespace(""), "addSignal"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureServices")
   method
    name "configureServices"
    refid "kabam.rotmg.editor:EditorConfig/instance/kabam.rotmg.editor:EditorConfig/instance/configureServices"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.lib.json"), "JsonParser")
      callproperty        QName(PackageNamespace(""), "map"), 1
      getlex              QName(PackageNamespace("kabam.lib.json"), "SoftwareJsonParser")
      callpropvoid        QName(PackageNamespace(""), "toSingleton"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.lib.tasks"), "TaskMonitor")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureSignals")
   method
    name "configureSignals"
    refid "kabam.rotmg.editor:EditorConfig/instance/kabam.rotmg.editor:EditorConfig/instance/configureSignals"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.core.signals"), "SetScreenSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.core.signals"), "GotoPreviousScreenSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.core.signals"), "LaunchGameSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.signals"), "SetTextureSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.dialogs.control"), "OpenDialogSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.dialogs.control"), "CloseDialogsSignal")
      callproperty        QName(PackageNamespace(""), "map"), 1
      callpropvoid        QName(PackageNamespace(""), "asSingleton"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureCommands")
   method
    name "configureCommands"
    refid "kabam.rotmg.editor:EditorConfig/instance/kabam.rotmg.editor:EditorConfig/instance/configureCommands"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "commandMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.signals"), "SaveTextureSignal")
      callproperty        QName(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.commands"), "SaveTextureCommand")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"), "toCommand"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "configureViews")
   method
    name "configureViews"
    refid "kabam.rotmg.editor:EditorConfig/instance/kabam.rotmg.editor:EditorConfig/instance/configureViews"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.core.view"), "ScreensView")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.core.view"), "ScreensMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.dialogs.view"), "DialogsView")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.dialogs.view"), "DialogsMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view.components.loaddialog"), "ResultsBox")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view.components.loaddialog"), "ResultsBoxMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "TermsView")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "TermsMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "TextureView")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "TextureMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "SaveTextureDialog")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "SaveTextureMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "LoadTextureDialog")
      callproperty        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "map"), 1
      getlex              QName(PackageNamespace("kabam.rotmg.editor.view"), "LoadTextureMediator")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"), "toMediator"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "init")
   method
    name "init"
    refid "kabam.rotmg.editor:EditorConfig/instance/kabam.rotmg.editor:EditorConfig/instance/init"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "mediatorMap")
      getlocal0
      getproperty         QName(PackageNamespace(""), "contextView")
      callpropvoid        QName(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"), "mediate"), 1

      getlocal0
      findpropstrict      QName(PackageNamespace("kabam.rotmg.core.view"), "Layers")
      constructprop       QName(PackageNamespace("kabam.rotmg.core.view"), "Layers"), 0
      setproperty         QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "layers")

      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      getlex              QName(PackageNamespace("kabam.rotmg.core.view"), "Layers")
      callproperty        QName(PackageNamespace(""), "map"), 1
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "layers")
      callpropvoid        QName(PackageNamespace(""), "toValue"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "contextView")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.editor:EditorConfig"), "layers")
      callpropvoid        QName(PackageNamespace(""), "addChild"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.editor:EditorConfig/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
