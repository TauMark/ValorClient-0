class
 refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"
 instance QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
  extends QName(PackageNamespace(""), "Object")
  implements QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "StringBuilder")
  flag SEALED
  iinit
   name "AppendingLineBuilder"
   refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/init"
   body
    maxstack 3
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData")
     applytype           1
     construct           0
     setproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data")

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData")>) end
  trait slot QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "delimiter") type QName(PackageNamespace(""), "String") value Utf8("\n") end
  trait slot QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "provider") type QName(PackageNamespace("kabam.rotmg.language.model"), "StringMap") end
  trait method QName(PackageNamespace(""), "pushParams")
   method
    name "pushParams"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/pushParams"
    param QName(PackageNamespace(""), "String")
    param QName(PackageNamespace(""), "Object")
    param QName(PackageNamespace(""), "String")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Null()
    optional Utf8("")
    optional Utf8("")
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    paramname "_arg4"
    body
     maxstack 3
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data")
      findpropstrict      QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData")
      constructprop       QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData"), 0
      getlocal1
      callproperty        QName(PackageNamespace(""), "setKey"), 1
      getlocal2
      callproperty        QName(PackageNamespace(""), "setTokens"), 1
      getlocal3
      callproperty        QName(PackageNamespace(""), "setOpeningTags"), 1
      getlocal            4
      callproperty        QName(PackageNamespace(""), "setClosingTags"), 1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      getlocal0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setDelimiter")
   method
    name "setDelimiter"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/setDelimiter"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "delimiter")

      getlocal0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setStringMap")
   method
    name "setStringMap"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/setStringMap"
    param QName(PackageNamespace("kabam.rotmg.language.model"), "StringMap")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    body
     maxstack 2
     localcount 2
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "provider")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getString")
   method
    name "getString"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/getString"
    returns QName(PackageNamespace(""), "String")
    body
     maxstack 3
     localcount 5
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      pushnull
      setlocal1

      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PackageNamespace(""), "String")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "String")>)
      setlocal2

      pushbyte            0
      setlocal            4

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data")
      setlocal3

      jump                L28

L16:
      label
      getlocal3
      getlocal            4
      nextvalue
      coerce              QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData")
      setlocal1

      getlocal2
      getlocal1
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "provider")
      callproperty        QName(PackageNamespace(""), "getString"), 1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L28:
      hasnext2            3, 4
      iftrue              L16

      getlocal2
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "delimiter")
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "hasLines")
   method
    name "hasLines"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/hasLines"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data")
      getproperty         QName(PackageNamespace(""), "length")
      pushbyte            0
      equals
      not
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "clear")
   method
    name "clear"
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/clear"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
      getlex              QName(PrivateNamespace("FilePrivateNS:AppendingLineBuilder"), "LineData")
      applytype           1
      construct           0
      setproperty         QName(PrivateNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "data")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
