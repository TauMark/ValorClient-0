class
 refid "kabam.rotmg.startup.control:StartupSequence"
 instance QName(PackageNamespace("kabam.rotmg.startup.control"), "StartupSequence")
  extends QName(PackageNamespace("kabam.lib.tasks"), "BaseTask")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.rotmg.startup.control:StartupSequence")
  iinit
   refid "kabam.rotmg.startup.control:StartupSequence/instance/init"
   body
    maxstack 2
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace("kabam.rotmg.startup.model.api"), "StartupDelegate")
     applytype           1
     pushbyte            0
     construct           1
     findproperty        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
     swap
     initproperty        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait const QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.rotmg.startup.model.api"), "StartupDelegate")>) end
  trait slot QName(PackageNamespace(""), "injector") flag METADATA type QName(PackageNamespace("org.swiftsuspenders"), "Injector")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "logger") flag METADATA type QName(PackageNamespace("robotlegs.bender.framework.api"), "ILogger")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "index") type QName(PackageNamespace(""), "int") value Integer(0) end
  trait method QName(PackageNamespace(""), "addSignal")
   method
    name "addSignal"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/addSignal"
    param QName(PackageNamespace(""), "Class")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Integer(0)
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 2
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "SignalTaskDelegate")
      constructprop       QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "SignalTaskDelegate"), 0
      coerce              QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "SignalTaskDelegate")
      setlocal3

      getlocal3
      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      setproperty         QName(PackageNamespace(""), "injector")

      getlocal3
      getlocal1
      setproperty         QName(PackageNamespace(""), "signalClass")

      getlocal3
      getlocal2
      setproperty         QName(PackageNamespace(""), "priority")

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
      getlocal3
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "addTask")
   method
    name "addTask"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/addTask"
    param QName(PackageNamespace(""), "Class")
    param QName(PackageNamespace(""), "int")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    flag HAS_PARAM_NAMES
    optional Integer(0)
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 2
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "TaskDelegate")
      constructprop       QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "TaskDelegate"), 0
      coerce              QName(PackageNamespace("kabam.rotmg.startup.model.impl"), "TaskDelegate")
      setlocal3

      getlocal3
      getlocal0
      getproperty         QName(PackageNamespace(""), "injector")
      setproperty         QName(PackageNamespace(""), "injector")

      getlocal3
      getlocal1
      setproperty         QName(PackageNamespace(""), "taskClass")

      getlocal3
      getlocal2
      setproperty         QName(PackageNamespace(""), "priority")

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
      getlocal3
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(ProtectedNamespace("kabam.rotmg.startup.control:StartupSequence"), "startTask") flag OVERRIDE
   method
    name "startTask"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence:startTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "priorityComparison")
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "sort"), 1

      getlocal0
      pushbyte            0
      setproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "index")

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "doNextTaskOrComplete"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "priorityComparison")
   method
    name "priorityComparison"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence/instance/priorityComparison"
    param QName(PackageNamespace("kabam.rotmg.startup.model.api"), "StartupDelegate")
    param QName(PackageNamespace("kabam.rotmg.startup.model.api"), "StartupDelegate")
    returns QName(PackageNamespace(""), "int")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    body
     maxstack 2
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal1
      callproperty        QName(Namespace("kabam.rotmg.startup.model.api:StartupDelegate"), "getPriority"), 0
      getlocal2
      callproperty        QName(Namespace("kabam.rotmg.startup.model.api:StartupDelegate"), "getPriority"), 0
      subtract
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "doNextTaskOrComplete")
   method
    name "doNextTaskOrComplete"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence/instance/doNextTaskOrComplete"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "isAnotherTask"), 0
      iffalse             L8

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "doNextTask"), 0

      jump                L11

L8:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      pushtrue
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 1

L11:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "isAnotherTask")
   method
    name "isAnotherTask"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence/instance/isAnotherTask"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 1
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "index")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
      getproperty         QName(PackageNamespace(""), "length")
      lessthan
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "doNextTask")
   method
    name "doNextTask"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence/instance/doNextTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 3
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "list")
      getlocal0
      dup
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "index")
      convert_d
      dup
      setlocal2

      increment
      setproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "index")

      getlocal2
      getproperty         MultinameL([PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), ProtectedNamespace("kabam.rotmg.startup.control:StartupSequence"), StaticProtectedNs("kabam.rotmg.startup.control:StartupSequence"), StaticProtectedNs("kabam.lib.tasks:BaseTask"), StaticProtectedNs("Object"), PackageNamespace("kabam.rotmg.startup.control"), PackageInternalNs("kabam.rotmg.startup.control"), PrivateNamespace("FilePrivateNS:StartupSequence"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
      callproperty        QName(Namespace("kabam.rotmg.startup.model.api:StartupDelegate"), "make"), 0
      coerce              QName(PackageNamespace("kabam.lib.tasks"), "Task")
      setlocal1

      getlocal1
      getproperty         QName(Namespace("kabam.lib.tasks:Task"), "lastly")
      getlocal0
      getproperty         QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "onTaskFinished")
      callpropvoid        QName(PackageNamespace(""), "addOnce"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "logger")
      pushstring          "StartupSequence start:{0}"
      getlocal1
      newarray            1
      callpropvoid        QName(Namespace("robotlegs.bender.framework.api:ILogger"), "info"), 2

      getlocal1
      callpropvoid        QName(Namespace("kabam.lib.tasks:Task"), "start"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "onTaskFinished")
   method
    name "onTaskFinished"
    refid "kabam.rotmg.startup.control:StartupSequence/instance/kabam.rotmg.startup.control:StartupSequence/instance/onTaskFinished"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    param QName(PackageNamespace(""), "Boolean")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    flag HAS_PARAM_NAMES
    paramname "_arg1"
    paramname "_arg2"
    paramname "_arg3"
    body
     maxstack 4
     localcount 4
     initscopedepth 0
     maxscopedepth 1
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "logger")
      pushstring          "StartupSequence finish:{0} (isOK: {1})"
      getlocal1
      getlocal2
      newarray            2
      callpropvoid        QName(Namespace("robotlegs.bender.framework.api:ILogger"), "info"), 2

      getlocal2
      iffalse             L14

      getlocal0
      callpropvoid        QName(PrivateNamespace("kabam.rotmg.startup.control:StartupSequence"), "doNextTaskOrComplete"), 0

      jump                L18

L14:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      pushfalse
      getlocal3
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 2

L18:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.startup.control:StartupSequence/class/init"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "LAST") type QName(PackageNamespace(""), "int") value Integer(2147483647) end
end ; class
